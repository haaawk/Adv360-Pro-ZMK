/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        dvp_dollar_tilde: dvp_dollar_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_DOLLAR_TILDE";
            bindings = <&kp DOLLAR>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_ampersand_percent: dvp_ampersand_percent {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_AMPERSAND_PERCENT";
            bindings = <&kp AMPERSAND>, <&kp PERCENT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_lbracket_7: dvp_lbracket_7 {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_LBRACKET_7";
            bindings = <&kp LEFT_BRACKET>, <&kp KP_NUMBER_7>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_lbrace_5: dvp_lbrace_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_LBRACE_5";
            bindings = <&kp LEFT_BRACE>, <&kp KP_NUMBER_5>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_rbrace_3: dvp_rbrace_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_RBRACE_3";
            bindings = <&kp RIGHT_BRACE>, <&kp KP_NUMBER_3>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_lparenthesis_1: dvp_lparenthesis_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_LPARENTHESIS_1";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp KP_NUMBER_1>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_equal_9: dvp_equal_9 {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_EQUAL_9";
            bindings = <&kp KP_EQUAL>, <&kp KP_NUMBER_9>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_semicolon_colon: dvp_semicolon_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_SEMICOLON_COLON";
            bindings = <&kp SEMICOLON>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_comma_lt: dvp_comma_lt {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_COMMA_LT";
            bindings = <&kp COMMA>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_period_gt: dvp_period_gt {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_PERIOD_GT";
            bindings = <&kp PERIOD>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_star_0: dvp_star_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_STAR_0";
            bindings = <&kp STAR>, <&kp KP_NUMBER_0>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_rparenthesis_2: dvp_rparenthesis_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_RPARENTHESIS_2";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp KP_NUMBER_2>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_plus_4: dvp_plus_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_PLUS_4";
            bindings = <&kp PLUS>, <&kp KP_NUMBER_4>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_rbracket_6: dvp_rbracket_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_RBRACKET_6";
            bindings = <&kp RIGHT_BRACKET>, <&kp KP_NUMBER_6>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_exclamation_8: dvp_exclamation_8 {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_EXCLAMATION_8";
            bindings = <&kp EXCLAMATION>, <&kp KP_NUMBER_8>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_hash_tick: dvp_hash_tick {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_HASH_TICK";
            bindings = <&kp HASH>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dvp_at_caret: dvp_at_caret {
            compatible = "zmk,behavior-mod-morph";
            label = "DVP_AT_CARET";
            bindings = <&kp AT>, <&kp CARET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&dvp_dollar_tilde  &dvp_ampersand_percent  &dvp_lbracket_7  &dvp_lbrace_5   &dvp_rbrace_3  &dvp_lparenthesis_1  &dvp_equal_9                                                                                       &none          &dvp_star_0  &dvp_rparenthesis_2  &dvp_plus_4  &dvp_rbracket_6  &dvp_exclamation_8  &dvp_hash_tick
&kp TAB            &dvp_semicolon_colon    &dvp_comma_lt    &dvp_period_gt  &kp P          &kp Y                &tog 1                                                                                             &dvp_at_caret  &kp F        &kp G                &kp C        &kp R            &kp L               &kp SLASH
&kp ESC            &kp A                   &kp O            &kp E           &kp U          &kp I                &tog 2                   &kp LEFT_CONTROL  &kp LALT      &kp RALT    &kp RIGHT_CONTROL             &kp BACKSLASH  &kp D        &kp H                &kp T        &kp N            &kp S               &kp MINUS
&kp LSHIFT         &kp APOSTROPHE          &kp Q            &kp J           &kp K          &kp X                                                           &kp LSHIFT    &kp RSHIFT                                               &kp B        &kp M                &kp W        &kp V            &kp Z               &kp RSHFT
&kp LCTRL          &kp PG_UP               &kp PG_DN        &kp HOME        &kp END                                           &kp ENTER  &kp DELETE        &kp LGUI      &kp RGUI    &kp BACKSPACE      &kp SPACE                              &kp LEFT             &kp UP       &kp DOWN_ARROW   &kp RIGHT           &kp RCTRL
            >;
        };

        layer_keypad {
            bindings = <
&trans  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &trans        &trans                                                    &trans  &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &bootloader   &trans                                                    &trans  &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
&trans  &bt BT_SEL 4     &bt BT_SEL 3     &bt BT_SEL 2     &bt BT_SEL 1     &bt BT_SEL 0  &trans          &trans  &trans    &trans  &trans          &trans  &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
&trans  &trans           &bl BL_TOG       &bl BL_INC       &bl BL_DEC       &bt BT_CLR                            &trans    &trans                          &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans  &trans           &trans           &trans           &trans                                 &trans  &trans  &trans    &trans  &trans  &trans                  &trans      &trans        &kp KP_DOT     &trans           &trans
            >;
        };

        layer_fn {
            bindings = <
&trans  &trans   &trans  &trans  &trans   &trans   &trans                                                    &trans  &trans  &trans     &trans     &trans    &trans     &trans
&trans  &kp F10  &kp F9  &kp F8  &kp F7   &kp F6   &trans                                                    &trans  &trans  &kp HOME   &kp END    &trans    &trans     &trans
&trans  &kp F5   &kp F4  &kp F3  &kp F2   &kp F1   &trans          &trans  &trans    &trans  &trans          &trans  &trans  &kp UP     &kp DOWN   &kp LEFT  &kp RIGHT  &trans
&trans  &trans   &trans  &trans  &kp F12  &kp F11                          &trans    &trans                          &trans  &kp PG_UP  &kp PG_DN  &trans    &trans     &trans
&trans  &trans   &trans  &trans  &trans                    &trans  &trans  &trans    &trans  &trans  &trans                  &trans     &trans     &trans    &trans     &trans
            >;
        };
    };
};

